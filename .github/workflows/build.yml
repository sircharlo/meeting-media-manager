name: Build

on:
  workflow_call:
    inputs:
      checkout-latest:
        description: 'Checkout the latest changes from the repository'
        type: boolean
    secrets:
      APPLE_APP_SPECIFIC_PASSWORD:
        required: true
      APPLE_ID:
        required: true
      APPLE_TEAM_ID:
        required: true
      KEYCHAIN_PASSWORD:
        required: true
      MAC_CERTIFICATE_BASE64:
        required: true
      MAC_CERTIFICATE_PASSWORD:
        required: true
      SENTRY_AUTH_TOKEN:
        required: true
      TEST_VERSION:
        required: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out master branch
        if: ${{ inputs.checkout-latest == true }}
        uses: actions/checkout@v4
        with:
          ref: master
      - name: Check out Git repository
        if: ${{ inputs.checkout-latest == false }}
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install
      - name: Lint files
        run: |
          yarn quasar prepare
          yarn lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out master branch
        if: ${{ inputs.checkout-latest == true }}
        uses: actions/checkout@v4
        with:
          ref: master
      - name: Check out Git repository
        if: ${{ inputs.checkout-latest == false }}
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install
      - name: Run tests
        run: |
          yarn quasar prepare
          yarn test:unit
  build:
    runs-on: ${{ matrix.os }}
    needs: [lint, test]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest]
    steps:
      - name: Check out master branch
        if: ${{ inputs.checkout-latest == true }}
        uses: actions/checkout@v4
        with:
          ref: master
      - name: Check out Git repository
        if: ${{ inputs.checkout-latest == false }}
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install
      - name: Install Apple certificate
        if: runner.os == 'macOS' && github.actor != 'dependabot[bot]'
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          MAC_CERTIFICATE_BASE64: ${{ secrets.MAC_CERTIFICATE_BASE64 }}
          MAC_CERTIFICATE_PASSWORD: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}
        run: |
          echo "create variables"
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          echo "import certificate"
          echo -n "$MAC_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          echo "create temporary keychain"
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          echo "import certificate to keychain"
          security import $CERTIFICATE_PATH -P "$MAC_CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
      - name: Run security find-identity -v
        if: runner.os == 'macOS' && github.actor != 'dependabot[bot]'
        run: security find-identity -v
      - name: Build and Publish Electron App
        run: |
          yarn generate:icons
          yarn generate:logos
          yarn build
        env:
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GITHUB_TOKEN: ${{ github.token }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          TEST_VERSION: ${{ secrets.TEST_VERSION }}
      - name: Clean up keychain and provisioning profile
        if: always() && runner.os == 'macOS' && github.actor != 'dependabot[bot]'
        run: |
          rm -f $RUNNER_TEMP/build_certificate.p12
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MÂ³ test build for ${{ matrix.os == 'macos-13' && 'Intel-based macOS' || matrix.os == 'macos-latest' && 'M-series (Apple Silicon) macOS' || matrix.os == 'windows-latest' && 'Windows' || 'Linux' }}
          path: |
            dist/electron/Packaged/*.exe
            dist/electron/Packaged/*.dmg
            dist/electron/Packaged/*.zip
            dist/electron/Packaged/*.AppImage
            dist/electron/Packaged/*/*/Contents/Info.plist
